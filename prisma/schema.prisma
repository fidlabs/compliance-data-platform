generator client {
  provider        = "prisma-client-js"
  output          = "./generated/client"
  previewFeatures = ["typedSql", "metrics"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model allocator {
  id               String  @id
  address          String  @unique
  is_virtual       Boolean
  is_metaallocator Boolean
}

model provider {
  id               String @id
  num_of_deals     Int
  total_deal_size  BigInt
  num_of_clients   Int
  last_deal_height Int
}

model allocator_registry {
  id            String
  address       String @unique
  json_path     String
  registry_info Json

  @@id([id])
}

model client_allocator_distribution_weekly {
  week               DateTime
  client             String
  allocator          String
  num_of_allocations Int
  sum_of_allocations BigInt

  @@id([week, client, allocator])
}

model cid_sharing {
  client           String
  other_client     String
  total_deal_size  BigInt
  unique_cid_count Int

  @@id([client, other_client])
}

model unified_verified_deal_hourly {
  hour            DateTime
  client          String
  provider        String
  num_of_claims   Int
  total_deal_size BigInt

  @@id([hour, client, provider])
}

model client_provider_distribution_weekly {
  week             DateTime
  client           String
  provider         String
  total_deal_size  BigInt
  unique_data_size BigInt

  @@id([week, client, provider])
}

model client_provider_distribution {
  client           String
  provider         String
  total_deal_size  BigInt
  unique_data_size BigInt
  claims_count     BigInt?

  @@id([client, provider])
  @@index([provider])
}

model client_claims_hourly {
  hour            DateTime
  client          String
  total_deal_size BigInt

  @@id([hour, client])
}

model provider_first_client {
  provider     String @id
  first_client String
}

model client_replica_distribution {
  client           String
  num_of_replicas  Int
  total_deal_size  BigInt
  unique_data_size BigInt

  @@id([client, num_of_replicas])
}

model providers_weekly {
  week                                 DateTime
  provider                             String
  num_of_clients                       Int
  biggest_client_total_deal_size       BigInt
  total_deal_size                      BigInt
  avg_retrievability_success_rate      Float
  avg_retrievability_success_rate_http Float?

  @@id([week, provider])
}

model allocators_weekly {
  week                                          DateTime
  allocator                                     String
  num_of_clients                                Int
  biggest_client_sum_of_allocations             BigInt
  total_sum_of_allocations                      BigInt
  avg_weighted_retrievability_success_rate      Float
  avg_weighted_retrievability_success_rate_http Float?

  @@id([week, allocator])
}

model provider_retrievability_daily {
  date              DateTime
  provider          String
  total             Int
  successful        Int
  success_rate      Float
  successful_http   Int?
  success_rate_http Float?

  @@id([date, provider])
}

model client_allocator_distribution_weekly_acc {
  week               DateTime
  client             String
  allocator          String
  num_of_allocations Int
  sum_of_allocations BigInt

  @@id([week, client, allocator])
}

model client_provider_distribution_weekly_acc {
  week             DateTime
  client           String
  provider         String
  total_deal_size  BigInt
  unique_data_size BigInt

  @@id([week, client, provider])
}

model providers_weekly_acc {
  week                                 DateTime
  provider                             String
  num_of_clients                       Int
  biggest_client_total_deal_size       BigInt
  total_deal_size                      BigInt
  avg_retrievability_success_rate      Float
  avg_retrievability_success_rate_http Float?

  @@id([week, provider])
}

model allocators_weekly_acc {
  week                                          DateTime
  allocator                                     String
  num_of_clients                                Int
  biggest_client_sum_of_allocations             BigInt
  total_sum_of_allocations                      BigInt
  avg_weighted_retrievability_success_rate      Float
  avg_weighted_retrievability_success_rate_http Float?

  @@id([week, allocator])
}

model client_report {
  id                            BigInt                                        @id @default(autoincrement())
  create_date                   DateTime                                      @default(now())
  client                        String
  client_address                String?
  organization_name             String
  application_url               String?
  storage_provider_distribution client_report_storage_provider_distribution[]
  replica_distribution          client_report_replica_distribution[]
  cid_sharing                   client_report_cid_sharing[]
  check_results                 client_report_check_result[]
  allocators                    String[]                                      @default([])
}

enum StorageProviderIpniReportingStatus {
  MISREPORTING
  NOT_REPORTING
  OK
}

model client_report_storage_provider_distribution {
  id                               BigInt                                                @id @default(autoincrement())
  client_report                    client_report                                         @relation(fields: [client_report_id], references: [id])
  client_report_id                 BigInt
  provider                         String
  total_deal_size                  BigInt
  unique_data_size                 BigInt
  location                         client_report_storage_provider_distribution_location?
  retrievability_success_rate      Float?
  retrievability_success_rate_http Float?
  ipni_reporting_status            StorageProviderIpniReportingStatus?
  ipni_reported_claims_count       BigInt?
  claims_count                     BigInt?
}

model client_report_storage_provider_distribution_location {
  id                       BigInt                                      @id @default(autoincrement())
  ip                       String
  city                     String
  region                   String
  country                  String
  loc                      String
  org                      String?
  postal                   String?
  timezone                 String
  hostname                 String?
  provider_distribution    client_report_storage_provider_distribution @relation(fields: [provider_distribution_id], references: [id])
  provider_distribution_id BigInt                                      @unique
}

model client_report_replica_distribution {
  id               BigInt        @id @default(autoincrement())
  client_report    client_report @relation(fields: [client_report_id], references: [id])
  client_report_id BigInt
  num_of_replicas  BigInt
  total_deal_size  BigInt
  unique_data_size BigInt
  percentage       Float
}

model client_report_cid_sharing {
  id                           BigInt        @id @default(autoincrement())
  client_report                client_report @relation(fields: [client_report_id], references: [id])
  client_report_id             BigInt
  other_client                 String
  other_client_application_url String?
  total_deal_size              BigInt
  unique_cid_count             Int
}

model client_address_mapping {
  client      String   @id
  address     String   @unique
  create_date DateTime @default(now())
}

model client_report_check_result {
  id               String            @id @default(uuid()) @db.Uuid
  create_date      DateTime          @default(now())
  result           Boolean?
  check            ClientReportCheck
  client_report    client_report     @relation(fields: [client_report_id], references: [id])
  client_report_id BigInt
  metadata         Json?

  @@unique([check, client_report_id])
}

model allocator_report {
  id                              String                                           @id @default(uuid()) @db.Uuid
  create_date                     DateTime                                         @default(now())
  allocator                       String
  name                            String?
  address                         String
  clients_number                  Int
  multisig                        Boolean
  avg_retrievability_success_rate Float?
  clients                         allocator_report_client[]
  client_allocations              allocator_report_client_allocation[]
  storage_provider_distribution   allocator_report_storage_provider_distribution[]
  data_types                      String[]
  required_copies                 String?
  required_sps                    String?
  check_results                   allocator_report_check_result[]
}

model allocator_report_client {
  id                    String           @id @default(uuid()) @db.Uuid
  allocator_report      allocator_report @relation(fields: [allocator_report_id], references: [id])
  allocator_report_id   String           @db.Uuid
  client_id             String
  name                  String?
  allocators            String[]         @default([])
  allocations_number    Int
  total_allocations     BigInt
  application_url       String?
  application_timestamp DateTime?
}

model allocator_report_client_allocation {
  id                  String           @id @default(uuid()) @db.Uuid
  allocator_report    allocator_report @relation(fields: [allocator_report_id], references: [id])
  allocator_report_id String           @db.Uuid
  client_id           String
  allocation          BigInt
  timestamp           DateTime
}

model allocator_report_storage_provider_distribution {
  id                          String                                                   @id @default(uuid()) @db.Uuid
  allocator_report            allocator_report                                         @relation(fields: [allocator_report_id], references: [id])
  allocator_report_id         String                                                   @db.Uuid
  provider                    String
  total_deal_size             BigInt
  unique_data_size            BigInt
  perc_of_total_datacap       Float
  location                    allocator_report_storage_provider_distribution_location?
  retrievability_success_rate Float?
}

model allocator_report_storage_provider_distribution_location {
  id                       String                                         @id @default(uuid()) @db.Uuid
  provider_distribution    allocator_report_storage_provider_distribution @relation(fields: [provider_distribution_id], references: [id])
  provider_distribution_id String                                         @unique @db.Uuid
  ip                       String
  city                     String
  region                   String
  country                  String
  loc                      String
  org                      String?
  postal                   String?
  timezone                 String
  hostname                 String?
}

model allocator_report_check_result {
  id                  String               @id @default(uuid()) @db.Uuid
  create_date         DateTime             @default(now())
  result              Boolean?
  check               AllocatorReportCheck
  allocator_report    allocator_report     @relation(fields: [allocator_report_id], references: [id])
  allocator_report_id String               @db.Uuid
  metadata            Json?

  @@unique([check, allocator_report_id])
}

model ipni_publisher_advertisement {
  id             String  @id
  previous_id    String? @unique
  publisher_id   String
  context_id     String
  entries_number BigInt
  is_rm          Boolean

  @@index([publisher_id])
}

model old_datacap_balance_nv22 {
  allocator      String @id
  old_dc_balance BigInt
}

model old_datacap_balance_weekly {
  week           DateTime
  allocator      String
  old_dc_balance BigInt
  allocations    BigInt

  @@id([week, allocator])
}

model old_datacap_client_balance_nv22 {
  client         String @id
  old_dc_balance BigInt
}

model old_datacap_client_balance_weekly {
  week           DateTime
  client         String
  old_dc_balance BigInt
  claims         BigInt

  @@id([week, client])
}

model ipni_reporting_daily {
  date          DateTime @id @default(now())
  ok            Int
  not_reporting Int
  misreporting  Int
  total         Int
}

model provider_ip_info {
  date     DateTime @default(now())
  provider String
  lat      String?
  long     String?
  country  String?
  region   String?
  city     String?

  @@id([provider, date])
}

enum ClientReportCheck {
  STORAGE_PROVIDER_DISTRIBUTION_ALL_LOCATED_IN_THE_SAME_REGION
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_EXCEED_PROVIDER_DEAL
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_EXCEED_MAX_DUPLICATION
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_UNKNOWN_LOCATION
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_RETRIEVABILITY_ZERO
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_RETRIEVABILITY_75
  DEAL_DATA_REPLICATION_LOW_REPLICA
  DEAL_DATA_REPLICATION_CID_SHARING
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_IPNI_MISREPORTING
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_IPNI_NOT_REPORTING
  MULTIPLE_ALLOCATORS
}

enum AllocatorReportCheck {
  CLIENT_MULTIPLE_ALLOCATORS
}
