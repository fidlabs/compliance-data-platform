generator client {
  provider        = "prisma-client-js"
  output          = "./generated/client"
  previewFeatures = ["typedSql", "metrics"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model allocator {
  id               String  @id
  address          String  @unique
  is_virtual       Boolean
  is_metaallocator Boolean
}

model provider {
  id               String @id
  num_of_deals     Int
  total_deal_size  BigInt
  num_of_clients   Int
  last_deal_height Int
}

model allocator_registry {
  allocator_id      String
  allocator_address String  @unique
  json_path         String
  registry_info     Json
  rejected          Boolean @default(false)

  @@id([allocator_id])
}

model allocator_registry_archive {
  allocator_id      String
  allocator_address String  @unique
  json_path         String
  registry_info     Json
  rejected          Boolean @default(false)

  @@id([allocator_id])
}

model allocator_client_bookkeeping {
  allocator_id     String
  client_id        String
  client_address   String
  json_path        String
  bookkeeping_info Json

  @@id([allocator_id, client_id])
  @@index([client_id])
}

model client_datacap_allocation {
  id           Int      @id
  client_id    String
  allocator_id String
  timestamp    DateTime
  allocation   Decimal  @db.Decimal

  @@index([client_id])
}

model client_allocator_distribution_weekly {
  week               DateTime
  client             String
  allocator          String
  num_of_allocations Int
  sum_of_allocations BigInt

  @@id([week, client, allocator])
}

model cid_sharing {
  client           String
  other_client     String
  total_deal_size  BigInt
  unique_cid_count Int

  @@id([client, other_client])
}

model unified_verified_deal_hourly {
  hour            DateTime
  client          String
  provider        String
  num_of_claims   Int
  total_deal_size BigInt

  @@id([hour, client, provider])
}

model client_provider_distribution_weekly {
  week             DateTime
  client           String
  provider         String
  total_deal_size  BigInt
  unique_data_size BigInt

  @@id([week, client, provider])
}

model client_provider_distribution {
  client           String
  provider         String
  total_deal_size  BigInt
  unique_data_size BigInt
  claims_count     BigInt?

  @@id([client, provider])
  @@index([provider])
}

model client_claims_hourly {
  hour            DateTime
  client          String
  total_deal_size BigInt

  @@id([hour, client])
}

model provider_first_client {
  provider     String @id
  first_client String
}

model client_replica_distribution {
  client           String
  num_of_replicas  Int
  total_deal_size  BigInt
  unique_data_size BigInt

  @@id([client, num_of_replicas])
}

model providers_weekly {
  week                                 DateTime
  provider                             String
  num_of_clients                       Int
  biggest_client_total_deal_size       BigInt
  total_deal_size                      BigInt
  avg_retrievability_success_rate      Float
  avg_retrievability_success_rate_http Float?

  @@id([week, provider])
}

model provider_retrievability_daily {
  date              DateTime
  provider          String
  total             Int
  successful        Int
  success_rate      Float
  successful_http   Int?
  success_rate_http Float?

  @@id([date, provider])
}

model provider_url_finder_retrievability_daily {
  date         DateTime @default(now())
  provider     String
  success_rate Float?

  @@id([date, provider])
}

model client_allocator_distribution_weekly_acc {
  week               DateTime
  client             String
  allocator          String
  num_of_allocations Int
  sum_of_allocations BigInt

  @@id([week, client, allocator])
}

model client_provider_distribution_weekly_acc {
  week             DateTime
  client           String
  provider         String
  total_deal_size  BigInt
  unique_data_size BigInt

  @@id([week, client, provider])
}

model providers_weekly_acc {
  week                                 DateTime
  provider                             String
  num_of_clients                       Int
  biggest_client_total_deal_size       BigInt
  total_deal_size                      BigInt
  avg_retrievability_success_rate      Float
  avg_retrievability_success_rate_http Float?

  @@id([week, provider])
}

model allocators_weekly_acc {
  week                                          DateTime
  allocator                                     String
  num_of_clients                                Int
  biggest_client_sum_of_allocations             BigInt
  total_sum_of_allocations                      BigInt
  avg_weighted_retrievability_success_rate      Float
  avg_weighted_retrievability_success_rate_http Float?

  @@id([week, allocator])
}

model client_report {
  id                              BigInt                                        @id @default(autoincrement())
  create_date                     DateTime                                      @default(now())
  client                          String
  client_address                  String?
  avg_secs_to_first_deal          Float?
  organization_name               String
  application_url                 String?
  storage_provider_distribution   client_report_storage_provider_distribution[]
  replica_distribution            client_report_replica_distribution[]
  cid_sharing                     client_report_cid_sharing[]
  check_results                   client_report_check_result[]
  allocators                      String[]                                      @default([])
  allocator_required_copies       String?
  allocator_required_sps          String?
  is_public_dataset               Boolean?
  using_client_contract           Boolean?
  client_contract_max_deviation   String?
  storage_provider_ids_declared   String[]                                      @default([])
  available_datacap               BigInt?
  last_datacap_spent              DateTime?
  last_datacap_received           DateTime?
  low_replica_threshold           Int?
  high_replica_threshold          Int?
  total_requested_amount          BigInt?
  expected_size_of_single_dataset BigInt?
  total_uniq_data_set_size        BigInt?
}

enum StorageProviderIpniReportingStatus {
  MISREPORTING
  NOT_REPORTING
  OK
}

model client_report_storage_provider_distribution {
  id                                     BigInt                                                @id @default(autoincrement())
  client_report                          client_report                                         @relation(fields: [client_report_id], references: [id])
  client_report_id                       BigInt
  provider                               String
  total_deal_size                        BigInt
  unique_data_size                       BigInt
  location                               client_report_storage_provider_distribution_location?
  retrievability_success_rate            Float?
  retrievability_success_rate_http       Float?
  ipni_reporting_status                  StorageProviderIpniReportingStatus?
  ipni_reported_claims_count             BigInt?
  claims_count                           BigInt?
  declared_in_application_file           Boolean?
  retrievability_success_rate_url_finder Float?
  piece_working_url                      String?
}

model client_report_storage_provider_distribution_location {
  id                       BigInt                                      @id @default(autoincrement())
  ip                       String
  city                     String
  region                   String
  country                  String
  loc                      String
  org                      String?
  postal                   String?
  timezone                 String
  hostname                 String?
  provider_distribution    client_report_storage_provider_distribution @relation(fields: [provider_distribution_id], references: [id])
  provider_distribution_id BigInt                                      @unique
}

model client_report_replica_distribution {
  id               BigInt        @id @default(autoincrement())
  client_report    client_report @relation(fields: [client_report_id], references: [id])
  client_report_id BigInt
  num_of_replicas  BigInt
  total_deal_size  BigInt
  unique_data_size BigInt
  percentage       Float
}

model client_report_cid_sharing {
  id                           BigInt        @id @default(autoincrement())
  client_report                client_report @relation(fields: [client_report_id], references: [id])
  client_report_id             BigInt
  other_client                 String
  other_client_application_url String?
  total_deal_size              BigInt
  unique_cid_count             Int
}

model id_address_mapping {
  id          String   @id
  address     String   @unique
  create_date DateTime @default(now())
}

model client_report_check_result {
  id               String            @id @default(uuid()) @db.Uuid
  create_date      DateTime          @default(now())
  result           Boolean?
  check            ClientReportCheck
  client_report    client_report     @relation(fields: [client_report_id], references: [id])
  client_report_id BigInt
  metadata         Json?

  @@unique([check, client_report_id])
}

model allocator_report {
  id                                         String                                           @id @default(uuid()) @db.Uuid
  create_date                                DateTime                                         @default(now())
  allocator                                  String
  avg_secs_to_first_deal                     Float?
  name                                       String?
  address                                    String
  clients_number                             Int
  multisig                                   Boolean
  avg_retrievability_success_rate            Float?
  avg_retrievability_success_rate_http       Float?
  avg_retrievability_success_rate_url_finder Float?
  clients                                    allocator_report_client[]
  client_allocations                         allocator_report_client_allocation[]
  storage_provider_distribution              allocator_report_storage_provider_distribution[]
  data_types                                 String[]
  audit                                      String[]
  required_copies                            String?
  required_sps                               String?
  check_results                              allocator_report_check_result[]
  scoring_results                            allocator_report_scoring_results[]
}

model allocator_report_client {
  id                              String                                         @id @default(uuid()) @db.Uuid
  allocator_report                allocator_report                               @relation(fields: [allocator_report_id], references: [id])
  allocator_report_id             String                                         @db.Uuid
  client_id                       String
  name                            String?
  allocators                      String[]                                       @default([])
  allocations_number              Int
  total_allocations               BigInt
  application_url                 String?
  application_timestamp           DateTime?
  using_client_contract           Boolean?
  client_contract_max_deviation   String?
  replica_distribution            allocator_report_client_replica_distribution[]
  cid_sharing                     allocator_report_client_cid_sharing[]
  expected_size_of_single_dataset BigInt?
  total_uniq_data_set_size        BigInt?
}

model allocator_report_client_replica_distribution {
  id                        BigInt                   @id @default(autoincrement())
  num_of_replicas           BigInt
  total_deal_size           BigInt
  unique_data_size          BigInt
  percentage                Float
  allocator_report_client   allocator_report_client? @relation(fields: [allocator_report_clientId], references: [id])
  allocator_report_clientId String?                  @db.Uuid
}

model allocator_report_client_cid_sharing {
  id                           BigInt                   @id @default(autoincrement())
  allocator_report_client      allocator_report_client? @relation(fields: [allocator_report_clientId], references: [id])
  allocator_report_clientId    String?                  @db.Uuid
  other_client                 String
  other_client_application_url String?
  total_deal_size              BigInt
  unique_cid_count             Int
}

model allocator_report_client_allocation {
  id                  String           @id @default(uuid()) @db.Uuid
  allocator_report    allocator_report @relation(fields: [allocator_report_id], references: [id])
  allocator_report_id String           @db.Uuid
  client_id           String
  allocation          BigInt
  timestamp           DateTime
}

model allocator_report_storage_provider_distribution {
  id                                     String                                                   @id @default(uuid()) @db.Uuid
  allocator_report                       allocator_report                                         @relation(fields: [allocator_report_id], references: [id])
  allocator_report_id                    String                                                   @db.Uuid
  provider                               String
  total_deal_size                        BigInt
  unique_data_size                       BigInt
  perc_of_total_datacap                  Float
  location                               allocator_report_storage_provider_distribution_location?
  retrievability_success_rate            Float?
  retrievability_success_rate_http       Float?
  retrievability_success_rate_url_finder Float?
  ipni_reporting_status                  StorageProviderIpniReportingStatus?
  ipni_reported_claims_count             BigInt?
  claims_count                           BigInt?
}

model allocator_report_storage_provider_distribution_location {
  id                       String                                         @id @default(uuid()) @db.Uuid
  provider_distribution    allocator_report_storage_provider_distribution @relation(fields: [provider_distribution_id], references: [id])
  provider_distribution_id String                                         @unique @db.Uuid
  ip                       String
  city                     String
  region                   String
  country                  String
  loc                      String
  org                      String?
  postal                   String?
  timezone                 String
  hostname                 String?
}

model allocator_report_check_result {
  id                  String               @id @default(uuid()) @db.Uuid
  create_date         DateTime             @default(now())
  result              Boolean?
  check               AllocatorReportCheck
  allocator_report    allocator_report     @relation(fields: [allocator_report_id], references: [id])
  allocator_report_id String               @db.Uuid
  metadata            Json?

  @@unique([check, allocator_report_id])
}

model allocator_report_scoring_results {
  id                  String                 @id @default(uuid()) @db.Uuid
  create_date         DateTime               @default(now())
  score               Int
  metric              AllocatorScoringMetric
  metric_name         String
  metric_description  String
  metric_value        Float
  metric_average      Float?
  metric_value_min    Float
  metric_value_max    Float?
  allocator_report    allocator_report       @relation(fields: [allocator_report_id], references: [id])
  allocator_report_id String                 @db.Uuid
  metadata            String[]

  @@unique([metric, allocator_report_id])
}

model ipni_publisher_advertisement {
  id             String  @id
  previous_id    String? @unique
  publisher_id   String
  context_id     String
  entries_number BigInt
  is_rm          Boolean

  @@index([publisher_id])
}

model old_datacap_balance_nv22 {
  allocator      String @id
  old_dc_balance BigInt
}

model old_datacap_balance_weekly {
  week           DateTime
  allocator      String
  old_dc_balance BigInt
  allocations    BigInt

  @@id([week, allocator])
}

model old_datacap_client_balance_nv22 {
  client         String @id
  old_dc_balance BigInt
}

model old_datacap_client_balance_weekly {
  week           DateTime
  client         String
  old_dc_balance BigInt
  claims         BigInt

  @@id([week, client])
}

model ipni_reporting_daily {
  date          DateTime @id @default(now())
  ok            Int
  not_reporting Int
  misreporting  Int
  total         Int
}

model provider_ip_info {
  date     DateTime @default(now())
  provider String
  lat      String?
  long     String?
  country  String?
  region   String?
  city     String?

  @@id([provider, date])
}

enum AllocatorScoringMetric {
  IPNI_REPORTING
  HTTP_RETRIEVABILITY
  URL_FINDER_RETRIEVABILITY
  CID_SHARING
  DUPLICATED_DATA
  UNIQUE_DATA_SET_SIZE
  EQUALITY_OF_DATACAP_DISTRIBUTION
  CLIENT_DIVERSITY
  CLIENT_PREVIOUS_APPLICATIONS
}

enum ClientReportCheck {
  STORAGE_PROVIDER_DISTRIBUTION_ALL_LOCATED_IN_THE_SAME_REGION
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_EXCEED_PROVIDER_DEAL
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_EXCEED_MAX_DUPLICATION
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_UNKNOWN_LOCATION
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_RETRIEVABILITY_ZERO
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_RETRIEVABILITY_75
  STORAGE_PROVIDER_URL_FINDER_RETRIEVABILITY_ZERO
  STORAGE_PROVIDER_URL_FINDER_RETRIEVABILITY_75
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_IPNI_MISREPORTING
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_IPNI_NOT_REPORTING
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_DECLARED_NOT_USED
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_NOT_DECLARED
  DEAL_DATA_REPLICATION_LOW_REPLICA
  DEAL_DATA_REPLICATION_HIGH_REPLICA
  DEAL_DATA_REPLICATION_CID_SHARING
  MULTIPLE_ALLOCATORS
  NOT_ENOUGH_COPIES
  INACTIVITY
  UNIQ_DATA_SET_SIZE_TO_DECLARED
}

enum AllocatorReportCheck {
  CLIENT_MULTIPLE_ALLOCATORS
  CLIENT_NOT_ENOUGH_COPIES
  // client reports checks
  STORAGE_PROVIDER_DISTRIBUTION_ALL_LOCATED_IN_THE_SAME_REGION
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_EXCEED_PROVIDER_DEAL
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_EXCEED_MAX_DUPLICATION
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_UNKNOWN_LOCATION
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_RETRIEVABILITY_ZERO
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_RETRIEVABILITY_75
  STORAGE_PROVIDER_URL_FINDER_RETRIEVABILITY_ZERO
  STORAGE_PROVIDER_URL_FINDER_RETRIEVABILITY_75
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_IPNI_MISREPORTING
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_IPNI_NOT_REPORTING
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_DECLARED_NOT_USED
  STORAGE_PROVIDER_DISTRIBUTION_PROVIDERS_NOT_DECLARED
  DEAL_DATA_REPLICATION_LOW_REPLICA
  DEAL_DATA_REPLICATION_HIGH_REPLICA
  DEAL_DATA_REPLICATION_CID_SHARING
  MULTIPLE_ALLOCATORS
  NOT_ENOUGH_COPIES
  INACTIVITY
  UNIQ_DATA_SET_SIZE_TO_DECLARED
  // ----------------------
}
